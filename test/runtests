#!/bin/bash

# Author: Daniel Kahn Gillmor <dkg@fifthhorseman.net>

set -e

tests="${1##t-}"

if [ -n "${TEST_LOCK}" ]; then
    TEST_LOCK="$(realpath ${TEST_LOCK})"
    flock_cmd="flock -w 10 ${TEST_LOCK}"
fi

BADVARS=0
for v in TEST_HOST TEST_IP TEST_PORT TEST_QUERY_DELAY TEST_GAP MSVA_PORT; do
    if [ ! -v "$v" ]; then
        printf "You need to set the %s environment variable\n" "$v" >&2
        BADVARS=1
    fi
done

if [ 0 != "$BADVARS" ]; then
    exit 1
fi

if [ . != "$(dirname "$0")" ]; then
    printf "You should only run this mod-gnutls test suite from the test/ directory of the mod_gnutls source.\n" >&2
    exit 1
fi

function stop_msva() {
    kill %1
}

# Compare expected/actual outputs, filtering out the "Date" header
# from actual output because it is expected to change. It must have
# been manually excluded from the expected output.
#
# Parameters:
# $1: path to expected output
# $2: path to actual output
# $3: additional options for diff (optional)
function diff_output_filter_date()
{
    expected="$1"
    actual="$2"
    diff $3 -u "${expected}" <( cat "${actual}" | \
	grep -v -P '^Date:\s.*GMT\s?$' | tail -n "$(wc -l < ${expected})" )
}

function apache_down_err() {
    printf "FAILURE: %s\n" "$TEST_NAME"
    /usr/sbin/apache2 -f "$(pwd)/apache.conf" -k stop || true
    if [ -e output ]; then
	printf "\ngnutls-cli outputs:\n"
	diff_output_filter_date "output" "$output" || true
    fi
    printf "\nApache error logs:\n"
    tail "../../logs/${TEST_NAME}.error.log"
    if [ -n "${USE_MSVA}" ]; then
	stop_msva
    fi
}

if [ -z "$tests" ] ; then
    tests=./tests/*
else
    tests=./tests/"$(printf "%02d" "$tests")"_*
fi

if [ -n "${USE_MSVA}" ]; then
    GNUPGHOME=$(pwd)/msva.gnupghome MSVA_KEYSERVER_POLICY=never monkeysphere-validation-agent &
    trap stop_msva EXIT

    sleep "$TEST_GAP"

    printf "TESTING: initial MSVA verification\n"
    MONKEYSPHERE_VALIDATION_AGENT_SOCKET="http://127.0.0.1:$MSVA_PORT" msva-query-agent https "$(cat client.uid)" x509pem client < client/x509.pem
    printf "\nSUCCESS: initial MSVA verification\n"
fi

for t in $tests; do
    if [ -z "${flock_cmd}" ]; then
	echo "Warning: no lock file set"
	sleep "$TEST_GAP"
    fi
    export TEST_NAME="$(basename "$t")"
    output="../../outputs/${TEST_NAME}.output"
    rm -f "$output"
    cd "$t"
    if [ -e fail.* ]; then
        EXPECTED_FAILURE="$(printf " (expected: %s)" fail.*)"
    else
        unset EXPECTED_FAILURE
    fi
    printf "TESTING: %s%s\n" "$TEST_NAME" "$EXPECTED_FAILURE"
    trap apache_down_err EXIT
    if [ -n "${USE_MSVA}" ]; then
	MONKEYSPHERE_VALIDATION_AGENT_SOCKET="http://127.0.0.1:$MSVA_PORT" \
	    ${flock_cmd} \
	    /usr/sbin/apache2 -f "$(pwd)/apache.conf" -k start \
	    || [ -e fail.server ]
    else
	${flock_cmd} \
	    /usr/sbin/apache2 -f "$(pwd)/apache.conf" -k start \
	    || [ -e fail.server ]
    fi

    # The sleep call keeps the pipe from the subshell to gnutls-cli
    # open. Without it gnutls-cli would terminate as soon as sed is
    # done, and not wait for a response from the server, leading to
    # failing tests. Sending sleep to the background allows the test
    # case to proceed instead of waiting for it to return, but has the
    # disadvantage of leaving the sleep process dangling until it
    # eventually times out. Still preferable to a fixed delay.
    if (sed "s/__HOSTNAME__/${TEST_HOST}/" <./input && \
	sleep "${TEST_QUERY_DELAY}" &) | \
	gnutls-cli -p "${TEST_PORT}" $(cat ./gnutls-cli.args) "${TEST_HOST}" \
	>"$output";
    then
        if [ -e fail* ]; then
            printf "%s should have failed but succeeded\n" "$(basename "$t")" >&2
            exit 1
        fi
    else
        if [ ! -e fail* ]; then
            printf "%s should have succeeded but failed\n" "$(basename "$t")" >&2
            exit 1
        fi
    fi

    if [ -e output ] ; then
	diff_output_filter_date "output" "$output" "-q"
    fi
    /usr/sbin/apache2 -f "$(pwd)/apache.conf" -k stop || [ -e fail.server ]
    if [ -n "${USE_MSVA}" ]; then
	trap stop_msva EXIT
    else
	trap - EXIT
    fi
    printf "SUCCESS: %s\n" "$TEST_NAME"
    cd ../..
done

if [ -n "${USE_MSVA}" ]; then
    stop_msva
fi
